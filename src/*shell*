student@systems-vm:~>git
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
student@systems-vm:~> git clone https://github.com/utep-cs-systems-courses/1-tokenizer-Sh0otGit.git
Cloning into '1-tokenizer-Sh0otGit'...
remote: Enumerating objects: 16, done.        
remote: Counting objects: 100% (16/16), done.        
remote: Compressing objects: 100% (16/16), done.        
remote: Total 16 (delta 0), reused 6 (delta 0), pack-reused 0        
Unpacking objects: 100% (16/16), done.
student@systems-vm:~> ls
0-asciiart-Sh0otGit   bin      Documents  Music     Public     testCode  Videos
1-tokenizer-Sh0otGit  Desktop  Downloads  Pictures  Templates  ti
student@systems-vm:~> cd 1-tokenizer-Sh0otGit/
student@systems-vm:~/1-tokenizer-Sh0otGit> ls
LICENSE  README.md  sortArgDemo  src
student@systems-vm:~/1-tokenizer-Sh0otGit> cd sortArgDemo
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> ls
bst.c  bst.h  Makefile  README.md  sortargs.c
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> Make
If 'Make' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf Make
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> make
cc -g -O3   -c -o bst.o bst.c
cc -g -O3   -c -o sortargs.o sortargs.c
cc -o sortargs bst.o sortargs.o -g -O3
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> make
make: Nothing to be done for 'all'.
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> ls
bst.c  bst.h  bst.o  Makefile  README.md  sortargs  sortargs.c  sortargs.o
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> ls
bst.c  bst.h  bst.o  Makefile  README.md  sortargs  #sortargs.c#  sortargs.c  sortargs.o
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> cd src
bash: cd: src: No such file or directory
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> cd
student@systems-vm:~> cd 1-tokenizer-Sh0otGit/
student@systems-vm:~/1-tokenizer-Sh0otGit> ls
LICENSE  README.md  sortArgDemo  src
student@systems-vm:~/1-tokenizer-Sh0otGit> cd src
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.h  README.md  tester.c  tokenizer.h
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.h  README.md  tester.c  tokenizer.c  tokenizer.h
student@systems-vm:~/1-tokenizer-Sh0otGit/src> cd
student@systems-vm:~> cd 1-tokenizer-Sh0otGit/
student@systems-vm:~/1-tokenizer-Sh0otGit> ls
LICENSE  README.md  sortArgDemo  src
student@systems-vm:~/1-tokenizer-Sh0otGit> cd sortArgDemo/
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> ls
bst.c  bst.h  bst.o  Makefile  README.md  sortargs  #sortargs.c#  sortargs.c  sortargs.o
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> cd
student@systems-vm:~> cd 1-tokenizer-Sh0otGit/
student@systems-vm:~/1-tokenizer-Sh0otGit> cd src
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.h  README.md  tester.c  tokenizer.c  tokenizer.h
student@systems-vm:~/1-tokenizer-Sh0otGit/src> cd ui.c
bash: cd: ui.c: No such file or directory
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.h  README.md  tester.c  tokenizer.c  tokenizer.h  ui.c  ui.c~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.h  Makefile  README.md  tester.c  tokenizer.c  tokenizer.h  ui.c  ui.c~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> cd
student@systems-vm:~> cd 1-tokenizer-Sh0otGit/
student@systems-vm:~/1-tokenizer-Sh0otGit> ls
LICENSE  README.md  sortArgDemo  src
student@systems-vm:~/1-tokenizer-Sh0otGit> cd sortArgDemo/
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> ls
bst.c  bst.h  bst.o  Makefile  README.md  sortargs  #sortargs.c#  sortargs.c  sortargs.o
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> ls
bst.c  bst.h  bst.o  Makefile  README.md  sortargs  #sortargs.c#  sortargs.c  sortargs.o
student@systems-vm:~/1-tokenizer-Sh0otGit/sortArgDemo> cd
student@systems-vm:~> cd 1-tokenizer-Sh0otGit/
student@systems-vm:~/1-tokenizer-Sh0otGit> ls
LICENSE  README.md  sortArgDemo  src
student@systems-vm:~/1-tokenizer-Sh0otGit> cd src/
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.h  Makefile  README.md  tester.c  tokenizer.c  tokenizer.h  ui.c  ui.c~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
make: *** No rule to make target 'history.c', needed by 'tokenizer.o'.  Stop.
student@systems-vm:~/1-tokenizer-Sh0otGit/src> Make
If 'Make' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf Make
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
make: *** No rule to make target 'history.c', needed by 'tokenizer.o'.  Stop.
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.h  Makefile  README.md  tester.c  tokenizer.c  tokenizer.h  ui.c  ui.c~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.c  history.h  Makefile  README.md  tester.c  tokenizer.c  tokenizer.h  ui.c  ui.c~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> Make
If 'Make' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf Make
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:9:69: error: expected ‘)’ before ‘exit’
   printf("Welcome to Lab 1: Tokenizer! Please enter a string. Type "exit" to exit.\n");
                                                                     ^~~~
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
history.c  history.h  Makefile  README.md  tester.c  tokenizer.c  tokenizer.h  ui.c  ui.c~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
#history.c#  history.h  README.md  tokenizer.c  tokenizer.o  ui.c~
history.c    Makefile   tester.c   tokenizer.h  ui.c
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
1
You typed student@systems-vm:~/1-tokenizer-Sh0otGit/src> Make
If 'Make' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf Make
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:14:13: warning: multi-character character constant [-Wmultichar]
   if(input=='exit'){
             ^~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:14:11: warning: comparison between pointer and integer
   if(input=="exit"){
           ^~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
exit
You typed student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
testYou typed student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
testYou typed test
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:15:6: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   if(strcmp(input, "exit") == 0){
      ^~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:15:7: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   if (strcmp(input, "exit") == 0){
       ^~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> mKW
If 'mKW' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf mKW
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
exit
You typed 

student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:15:3: warning: implicit declaration of function ‘print’; did you mean ‘printf’? [-Wimplicit-function-declaration]
   print(input, " ", sizeof(input));
   ^~~~~
   printf
/usr/lib64/gcc/x86_64-suse-linux/7/../../../../x86_64-suse-linux/bin/ld: /tmp/ccBsvtuh.o: in function `main':
ui.c:(.text+0x3f): undefined reference to `print'
collect2: error: ld returned 1 exit status
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
testYou typed 

student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
testYou typed 

student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
You typed 

student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
You typed test
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
exit
Stopping program...
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
#history.c#  history.h  README.md  tokenizer.c  tokenizer.o  ui.c~
history.c    Makefile   tester.c   tokenizer.h  ui.c
student@systems-vm:~/1-tokenizer-Sh0otGit/src>make 
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
#history.c#  history.h  README.md  tokenizer.c   tokenizer.h  ui.c
history.c    Makefile   tester.c   tokenizer.c~  tokenizer.o  ui.c~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘word_start’:
tokenizer.c:30:1: error: expected ‘;’, ‘,’ or ‘)’ before ‘char’
 char *copy_str(char, *inStr, short len)
 ^~~~
make: *** [Makefile:2: tokenizer.o] Error 1x
smaketudent@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c:27:7: error: conflicting types for ‘word_terminator’
 char *word_terminator(char word){}
       ^~~~~~~~~~~~~~~
In file included from tokenizer.c:2:0:
tokenizer.h:21:7: note: previous declaration of ‘word_terminator’ was here
 char *word_terminator(char *word);
       ^~~~~~~~~~~~~~~
tokenizer.c:31:6: error: conflicting types for ‘count_words’
 char count_words(char *s){
      ^~~~~~~~~~~
In file included from tokenizer.c:2:0:
tokenizer.h:24:5: note: previous declaration of ‘count_words’ was here
 int count_words(char *str);
     ^~~~~~~~~~~
tokenizer.c: In function ‘count_words’:
tokenizer.c:32:3: error: ‘words’ undeclared (first use in this function)
   words = 0;
   ^~~~~
tokenizer.c:32:3: note: each undeclared identifier is reported only once for each function it appears in
tokenizer.c: At top level:
tokenizer.c:40:22: error: expected declaration specifiers or ‘...’ before ‘*’ token
 char *copy_str(char, *inStr, short len)
                      ^
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘word_start’:
tokenizer.c:24:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
   return '0';
          ^~~
tokenizer.c: At top level:
tokenizer.c:28:7: error: conflicting types for ‘word_terminator’
 char *word_terminator(char word){
       ^~~~~~~~~~~~~~~
In file included from tokenizer.c:2:0:
tokenizer.h:21:7: note: previous declaration of ‘word_terminator’ was here
 char *word_terminator(char *word);
       ^~~~~~~~~~~~~~~
tokenizer.c: In function ‘word_terminator’:
tokenizer.c:29:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
   return '0';
          ^~~
tokenizer.c: In function ‘count_words’:
tokenizer.c:35:3: error: ‘words’ undeclared (first use in this function)
   words = 0;
   ^~~~~
tokenizer.c:35:3: note: each undeclared identifier is reported only once for each function it appears in
tokenizer.c: At top level:
tokenizer.c:43:22: error: expected declaration specifiers or ‘...’ before ‘*’ token
 char *copy_str(char, *inStr, short len){
                      ^
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘word_start’:
tokenizer.c:24:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
   return '0';make
          ^~~
tokenizer.c: At top level:
tokenizer.c:28:7: error: conflicting types for ‘word_terminator’
 char *word_terminator(char word){
       ^~~~~~~~~~~~~~~
In file included from tokenizer.c:2:0:
tokenizer.h:21:7: note: previous declaration of ‘word_terminator’ was here
 char *word_terminator(char *word);
       ^~~~~~~~~~~~~~~
tokenizer.c: In function ‘word_terminator’:
tokenizer.c:29:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
   return '0';
          ^~~
tokenizer.c: In function ‘count_words’:
tokenizer.c:35:3: error: ‘words’ undeclared (first use in this function)
   words = 0;
   ^~~~~
tokenizer.c:35:3: note: each undeclared identifier is reported only once for each function it appears in
tokenizer.c: At top level:
tokenizer.c:43:22: error: expected declaration specifiers or ‘...’ before ‘*’ token
 char *copy_str(char, *inStr, short len){
                      ^
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src>    return '0';make
          ^~~
tokenizer.c: At top level:
tokenizer.c:28:7: error: conflicting types for ‘word_terminator’
 char *word_terminator(char word){
       ^~~~~~~~~~~~~~~
In file included from tokenizer.c:2:0:
tokenizer.h:21:7: note: previous declaration of ‘word_terminator’ was here
 char *word_terminator(char *word);
       ^~~~~~~~~~~~~~~
tokenizer.c: In function ‘word_terminator’:
tokenizer.c:29:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
   return '0';
          ^~~
tokenizer.c: In function ‘count_words’:
tokenizer.c:35:3: error: ‘words’ undeclared (first use in this function)
   words = 0;
   ^~~~~
tokenizer.c:35:3: note: each undeclared identifier is reported only once for each function it appears in
tokenizer.c: At top level:
tokenizer.c:43:22: error: expected declaration specifiers or ‘...’ before ‘*’ token
 char *copy_str(char, *inStr, short len){
                      ^
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> 
bash: return: can only `return' from a function or sourced script
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘count_words’:
tokenizer.c:35:3: error: ‘words’ undeclared (first use in this function)
   words = 0;
   ^~~~~
tokenizer.c:35:3: note: each undeclared identifier is reported only once for each function it appears in
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If '^~~' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf ^~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.c:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.c:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.c:28:7:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.c:28:7:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> bash: syntax error near unexpected token `('
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If '^~~~~~~~~~~~~~~' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf ^~~~~~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'In' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf In
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.h:21:7:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.h:21:7:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> bash: syntax error near unexpected token `('
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If '^~~~~~~~~~~~~~~' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf ^~~~~~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.c:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.c:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.c:29:10:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.c:29:10:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> bash: return: can only `return' from a function or sourced script
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If '^~~' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf ^~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.c:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.c:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> bash: syntax error near unexpected token `('
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'words' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf words
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If '^~~~~' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf ^~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.c:35:3:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.c:35:3:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.c:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.c:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'tokenizer.c:43:22:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.c:43:22:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> bash: syntax error near unexpected token `('
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If '^' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf ^
student@systems-vm:~/1-tokenizer-Sh0otGit/src> If 'make:' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf make:
student@systems-vm:~/1-tokenizer-Sh0otGit/src> bash: syntax error near unexpected token `newline'
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘count_words’:
tokenizer.c:35:3: error: ‘words’ undeclared (first use in this function)
   words = 0;
   ^~~~~
tokenizer.c:35:3: note: each undeclared identifier is reported only once for each function it appears in
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
You typed test
student@systems-vm:~/1-tokenizer-Sh0otGit/src> 
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:3: warning: implicit declaration of function ‘print’; did you mean ‘printf’? [-Wimplicit-function-declaration]
   print("Amount of words: %s\n", count_words(input));
   ^~~~~
   printf
ui.c:28:34: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   print("Amount of words: %s\n", count_words(input));
                                  ^~~~~~~~~~~
/usr/lib64/gcc/x86_64-suse-linux/7/../../../../x86_64-suse-linux/bin/ld: /tmp/ccjdIOGN.o: in function `main':
ui.c:(.text+0xe7): undefined reference to `print'
collect2: error: ld returned 1 exit status
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %s\n", count_words(input));
                                   ^~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
make: 'tokenizer.o' is up to date.
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
make: 'tokenizer.o' is up to date.
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
You typed test
Amount of words: 3
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer
bash: ./tokenizer: No such file or directory
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test lol
You typed test
Amount of words: 3
student@systems-vm:~/1-tokenizer-Sh0otGit/src>./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
te
You typed te
Amount of words: 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> tokenizer.o
If 'tokenizer.o' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
e
You typed e
Amount of words: 0
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
tes
You typed tes
Amount of words: 2
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
teste
You typed teste
Amount of words: 4
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer
bash: ./tokenizer: No such file or directory
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
testlolz
You typed testlolz
Amount of words: 7
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test test
You typed test
Amount of words: 3
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
#history.c#  history.h  README.md  tokenizer.c   tokenizer.h  ui.c
history.c    Makefile   tester.c   tokenizer.c~  tokenizer.o  ui.c~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> 1
If '1' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
make: 'tokenizer.o' is up to date.
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
You typed test
testAmount of words: 4
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test tset
You typed test
testAmount of words: 4
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:29:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
make: 'tokenizer.o' is up to date.
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test test
You typed test test

Amount of words: 10
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.c
bash: ./tokenizer.c: Permission denied
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
123 567
You typed 123 567

Amount of words: 8
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:29:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
You typed test

Amount of words: 2
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test test test
You typed test test test

Amount of words: 4
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:29:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test
You typed test

Amount of words: 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
the cake is a lie!
You typed the cake is a lie!

Amount of words: 5
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
ui.c:30:10: warning: passing argument 1 of ‘printf’ from incompatible pointer type [-Wincompatible-pointer-types]
   printf(tokens);
          ^~~~~~
In file included from ui.c:6:0:
/usr/include/stdio.h:318:12: note: expected ‘const char * restrict’ but argument is of type ‘char **’
 extern int printf (const char *__restrict __format, ...);
            ^~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
make: 'tokenizer.o' is up to date.
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:25:8: error: ‘i’ undeclared (first use in this function)
   for (i = 0; i < strlen(s), i++){
        ^
tokenizer.c:25:8: note: each undeclared identifier is reported only once for each function it appears in
tokenizer.c:25:33: error: expected ‘;’ before ‘)’ token
   for (i = 0; i < strlen(s), i++){
                                 ^
tokenizer.c:29:10: warning: multi-character character constant [-Wmultichar]
   return 'N/A'
          ^~~~~
tokenizer.c:29:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
tokenizer.c:30:1: error: expected ‘;’ before ‘}’ token
 }
 ^
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:25:8: error: ‘i’ undeclared (first use in this function)
   for (i = 0; i < strlen(s), i++){
        ^
tokenizer.c:25:8: note: each undeclared identifier is reported only once for each function it appears in
tokenizer.c:25:33: error: expected ‘;’ before ‘)’ token
   for (i = 0; i < strlen(s), i++){
                                 ^
tokenizer.c:29:10: warning: multi-character character constant [-Wmultichar]
   return 'N/A'
          ^~~~~
tokenizer.c:29:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
tokenizer.c:30:1: error: expected ‘;’ before ‘}’ token
 }
 ^
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:25:8: error: ‘i’ undeclared (first use in this function)
   for (i = 0; i < strlen(s); i++){
        ^
tokenizer.c:25:8: note: each undeclared identifier is reported only once for each function it appears in
tokenizer.c:29:10: warning: multi-character character constant [-Wmultichar]
   return 'N/A'
          ^~~~~
tokenizer.c:29:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
tokenizer.c:30:1: error: expected ‘;’ before ‘}’ token
 }
 ^
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:25:8: error: ‘i’ undeclared (first use in this function)
   for (i = 0; i < strlen(s); i++){
        ^
tokenizer.c:25:8: note: each undeclared identifier is reported only once for each function it appears in
tokenizer.c:29:10: warning: multi-character character constant [-Wmultichar]
   return 'N/A';
          ^~~~~
tokenizer.c:29:10: warning: return makes pointer from integer without a cast [-Wint-conversion]
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:25:8: error: ‘i’ undeclared (first use in this function)
   for (i = 0; i < strlen(s); i++){
        ^
tokenizer.c:25:8: note: each undeclared identifier is reported only once for each function it appears in
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:27:15: warning: return makes pointer from integer without a cast [-Wint-conversion]
       return s[i];
              ~^~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:27:14: error: invalid type argument of unary ‘*’ (have ‘int’)
       return *s[i];
              ^~~~~
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:28:14: error: invalid type argument of unary ‘*’ (have ‘int’)
       return *curr;
              ^~~~~
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:24:16: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
   char *curr = s[0];
                ^
tokenizer.c:27:24: warning: passing argument 1 of ‘non_space_char’ makes integer from pointer without a cast [-Wint-conversion]
     if (non_space_char(curr))
                        ^~~~
tokenizer.c:14:5: note: expected ‘char’ but argument is of type ‘char *’
 int non_space_char(char c){
     ^~~~~~~~~~~~~~
tokenizer.c:28:14: warning: return makes pointer from integer without a cast [-Wint-conversion]
       return *curr;
              ^~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:24:16: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
   char *curr = s[0];
                ^
tokenizer.c:26:10: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     curr = s[i];
          ^
tokenizer.c:27:24: warning: passing argument 1 of ‘non_space_char’ makes integer from pointer without a cast [-Wint-conversion]
     if (non_space_char(curr))
                        ^~~~
tokenizer.c:14:5: note: expected ‘char’ but argument is of type ‘char *’
 int non_space_char(char c){
     ^~~~~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:24:16: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
   char *curr = s[0];
                ^
tokenizer.c:26:10: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     curr = s[i];
          ^
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:24:16: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
   char *curr = (char) s[0];
                ^
tokenizer.c:26:10: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     curr = s[i];
          ^
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
tokenizer.c: In function ‘word_start’:
tokenizer.c:26:15: warning: return makes pointer from integer without a cast [-Wint-conversion]
       return s[i];
              ~^~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
ui.c:29:35: warning: implicit declaration of function ‘word_start’ [-Wimplicit-function-declaration]
   printf("Start of words: %d\n", *word_start(input);
                                   ^~~~~~~~~~
ui.c:29:34: error: invalid type argument of unary ‘*’ (have ‘int’)
   printf("Start of words: %d\n", *word_start(input);
                                  ^~~~~~~~~~~~~~~~~~
ui.c:29:52: error: expected ‘)’ before ‘;’ token
   printf("Start of words: %d\n", *word_start(input);
                                                    ^
ui.c:32:1: error: expected ‘;’ before ‘}’ token
 }
 ^
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
ui.c:29:35: warning: implicit declaration of function ‘word_start’ [-Wimplicit-function-declaration]
   printf("Start of words: %d\n", *word_start(input));
                                   ^~~~~~~~~~
ui.c:29:34: error: invalid type argument of unary ‘*’ (have ‘int’)
   printf("Start of words: %d\n", *word_start(input));
                                  ^~~~~~~~~~~~~~~~~~
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
ui.c: In function ‘main’:
ui.c:28:35: warning: implicit declaration of function ‘count_words’ [-Wimplicit-function-declaration]
   printf("Amount of words: %d\n", count_words(input));
                                   ^~~~~~~~~~~
ui.c:29:34: warning: implicit declaration of function ‘word_start’ [-Wimplicit-function-declaration]
   printf("Start of words: %d\n", word_start(input));
                                  ^~~~~~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ls
#history.c#  history.h  README.md  tokenizer.c   tokenizer.h  #ui.c#  ui.c~
history.c    Makefile   tester.c   tokenizer.c~  tokenizer.o  ui.c
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test test
You typed test test

Amount of words: 2
Start of words: 741059780
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘word_start’:
tokenizer.c:26:16: warning: return makes pointer from integer without a cast [-Wint-conversion]
       return (s[i]);
              ~~^~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘word_start’:
tokenizer.c:24:30: warning: passing argument 1 of ‘strlen’ makes pointer from integer without a cast [-Wint-conversion]
   for (int i = 0; i < strlen(*s); i++){
                              ^
In file included from tokenizer.c:3:0:
/usr/include/string.h:384:15: note: expected ‘const char *’ but argument is of type ‘char’
 extern size_t strlen (const char *__s)
               ^~~~~~
tokenizer.c:25:24: error: invalid type argument of unary ‘*’ (have ‘int’)
     if (non_space_char(*s[i]))
                        ^~~~~
tokenizer.c:26:15: error: invalid type argument of unary ‘*’ (have ‘int’)
       return (*s[i]);
               ^~~~~
make: *** [Makefile:2: tokenizer.o] Error 1
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test test
You typed test test

Amount of words: 2
Start of words: 152678372
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘word_start’:
tokenizer.c:28:15: warning: return makes pointer from integer without a cast [-Wint-conversion]
       return (*curr);
              ~^~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test test
You typed test test

Amount of words: 2
Start of words: 32
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
test test
You typed test test

Amount of words: 2
test test
Start of words: 32
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
tokenizer.c: In function ‘word_start’:
tokenizer.c:28:12: warning: passing argument 1 of ‘printf’ makes pointer from integer without a cast [-Wint-conversion]
     printf(s[i], " ", curr);
            ^
In file included from tokenizer.c:1:0:
/usr/include/stdio.h:318:12: note: expected ‘const char * restrict’ but argument is of type ‘char’
 extern int printf (const char *__restrict __format, ...);
            ^~~~~~
student@systems-vm:~/1-tokenizer-Sh0otGit/src> make
gcc ui.c tokenizer.c history.c -o tokenizer.o
student@systems-vm:~/1-tokenizer-Sh0otGit/src> ./tokenizer.o
Welcome to Lab 1: Tokenizer! Please enter a string. Type 'exit' to exit.
